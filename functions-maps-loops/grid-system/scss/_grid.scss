@use "sass:math";
$grid-columns:12;

@include xs{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
            border: 2px solid yellow;
        }
    }
}
@include sm{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-sm{
            flex-grow: 0;
            box-sizing: border-box;
            width: math.div($i * 100%, $grid-columns);
            border: 2px solid blue;
        }
    }
}
@include md{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-columns);
            border: 2px solid black;
        }
    } 
}
@include lg{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-columns);
            border: 2px solid cyan;
        }
    } 
}
@include xl{
    @for $i from 1 through $grid-columns{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%, $grid-columns);
            border: 2px solid green;
        }
    } 
}

.container{
    width: 80%;
    margin: $base-marging auto;
    padding: 0 20px;
    border: 2px solid red;
}
.row{
    display: flex;
    flex-grow: 0;
    flex-wrap: row wrap;
    
}

$grid-gaps:(
    "0": 0,
    "1": 10px,
    "2":20px,
    "3":30px,
);

@each $key, $val in $grid-gaps{
    .gap-#{$key} > *{
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}
$layout-values: flex-start,flex-end,center,space-between,space-around;

@each $key in $layout-values{
    .justify-#{$key}{
        justify-content: $key;
    }
}